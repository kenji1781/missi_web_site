# Generated by Django 3.2.9 on 2022-02-07 22:42

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cost_Electric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Machine_electric_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='電力使用量')),
                ('Machine_steam_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='蒸気使用量')),
                ('Machine_gas_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='ガス使用量')),
                ('Machine_water_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='水使用量')),
                ('Cost_electric', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='電力費用')),
                ('Data_datetime', models.DateTimeField(blank=True, null=True, verbose_name='データ取得日')),
                ('Machine_history_input_date', models.DateField(blank=True, null=True, verbose_name='登録日')),
                ('Machine_history_memo', models.TextField(blank=True, max_length=50, null=True, verbose_name='メモ')),
            ],
            options={
                'verbose_name_plural': '電力コスト',
            },
        ),
        migrations.CreateModel(
            name='Cost_Gas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Cost_id', models.IntegerField(blank=True, default=0, null=True, verbose_name='ガスコストID')),
                ('Customer_machine_id', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='装置ID')),
                ('Machine_model', models.CharField(blank=True, max_length=20, null=True, verbose_name='型式')),
                ('Customer_machine_unit_no', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='号機')),
                ('Customer_recipe_no', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)], verbose_name='品種No')),
                ('Machine_electric_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='電力使用量')),
                ('Machine_steam_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='蒸気使用量')),
                ('Machine_gas_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='ガス使用量')),
                ('Machine_water_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='水使用量')),
                ('Cost_gas', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='ガス費用')),
                ('Data_date_year', models.IntegerField(blank=True, default=2021, null=True, validators=[django.core.validators.MinValueValidator(2021)], verbose_name='年')),
                ('Data_date_month', models.IntegerField(blank=True, default=1, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='月')),
                ('Data_date_day', models.IntegerField(blank=True, default=1, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)], verbose_name='日')),
                ('Data_datetime', models.DateTimeField(blank=True, null=True, verbose_name='データ取得日')),
                ('Machine_history_input_date', models.DateField(verbose_name='登録日')),
                ('Machine_history_memo', models.TextField(blank=True, max_length=50, null=True, verbose_name='メモ')),
            ],
            options={
                'verbose_name_plural': 'ガスコスト',
            },
        ),
        migrations.CreateModel(
            name='Cost_Solvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Cost_id', models.IntegerField(blank=True, default=0, null=True, verbose_name='溶剤コストID')),
                ('Customer_machine_id', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='装置ID')),
                ('Machine_model', models.CharField(blank=True, max_length=20, null=True, verbose_name='型式')),
                ('Customer_machine_unit_no', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='号機')),
                ('Customer_recipe_no', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)], verbose_name='品種No')),
                ('Machine_electric_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='電力使用量')),
                ('Machine_steam_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='蒸気使用量')),
                ('Machine_gas_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='ガス使用量')),
                ('Machine_water_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='水使用量')),
                ('Cost_solvent', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤費用')),
                ('Data_date_year', models.IntegerField(blank=True, default=2021, null=True, validators=[django.core.validators.MinValueValidator(2021)], verbose_name='年')),
                ('Data_date_month', models.IntegerField(blank=True, default=1, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='月')),
                ('Data_date_day', models.IntegerField(blank=True, default=1, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)], verbose_name='日')),
                ('Data_datetime', models.DateTimeField(blank=True, null=True, verbose_name='データ取得日')),
                ('Machine_history_input_date', models.DateField(verbose_name='登録日')),
                ('Machine_history_memo', models.TextField(blank=True, max_length=50, null=True, verbose_name='メモ')),
            ],
            options={
                'verbose_name_plural': '溶剤コスト',
            },
        ),
        migrations.CreateModel(
            name='Cost_Steam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Cost_id', models.IntegerField(blank=True, default=0, null=True, verbose_name='蒸気コストID')),
                ('Customer_machine_id', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='装置ID')),
                ('Machine_model', models.CharField(blank=True, max_length=20, null=True, verbose_name='型式')),
                ('Customer_machine_unit_no', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='号機')),
                ('Customer_recipe_no', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)], verbose_name='品種No')),
                ('Machine_electric_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='電力使用量')),
                ('Machine_steam_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='蒸気使用量')),
                ('Machine_gas_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='ガス使用量')),
                ('Machine_water_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='水使用量')),
                ('Cost_steam', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='蒸気費用')),
                ('Data_date_year', models.IntegerField(blank=True, default=2021, null=True, validators=[django.core.validators.MinValueValidator(2021)], verbose_name='年')),
                ('Data_date_month', models.IntegerField(blank=True, default=1, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='月')),
                ('Data_date_day', models.IntegerField(blank=True, default=1, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)], verbose_name='日')),
                ('Data_datetime', models.DateTimeField(blank=True, null=True, verbose_name='データ取得日')),
                ('Machine_history_input_date', models.DateField(verbose_name='登録日')),
                ('Machine_history_memo', models.TextField(blank=True, max_length=50, null=True, verbose_name='メモ')),
            ],
            options={
                'verbose_name_plural': '蒸気コスト',
            },
        ),
        migrations.CreateModel(
            name='Cost_Total',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Cost_id', models.IntegerField(blank=True, default=0, null=True, verbose_name='トータルコストID')),
                ('Customer_machine_id', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='装置ID')),
                ('Machine_model', models.CharField(blank=True, max_length=20, null=True, verbose_name='型式')),
                ('Customer_machine_unit_no', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='号機')),
                ('Customer_recipe_no', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)], verbose_name='品種No')),
                ('Cost_electric', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='電力使用量')),
                ('Cost_steam', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='蒸気使用量')),
                ('Cost_gas', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='ガス使用量')),
                ('Cost_water', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='水使用量')),
                ('Cost_solvent', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='ガス使用量')),
                ('Cost_total', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='合計費用')),
                ('Data_date_year', models.IntegerField(blank=True, default=2021, null=True, validators=[django.core.validators.MinValueValidator(2021)], verbose_name='年')),
                ('Data_date_month', models.IntegerField(blank=True, default=1, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='月')),
                ('Data_date_day', models.IntegerField(blank=True, default=1, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)], verbose_name='日')),
                ('Data_datetime', models.DateTimeField(blank=True, null=True, verbose_name='データ取得日')),
                ('Machine_history_input_date', models.DateField(verbose_name='登録日')),
                ('Machine_history_memo', models.TextField(blank=True, max_length=50, null=True, verbose_name='メモ')),
            ],
            options={
                'verbose_name_plural': 'トータルコスト',
            },
        ),
        migrations.CreateModel(
            name='Cost_Water',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Cost_id', models.IntegerField(blank=True, default=0, null=True, verbose_name='水コストID')),
                ('Customer_machine_id', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='装置ID')),
                ('Machine_model', models.CharField(blank=True, max_length=20, null=True, verbose_name='型式')),
                ('Customer_machine_unit_no', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='号機')),
                ('Customer_recipe_no', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)], verbose_name='品種No')),
                ('Machine_electric_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='電力使用量')),
                ('Machine_steam_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='蒸気使用量')),
                ('Machine_gas_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='ガス使用量')),
                ('Machine_water_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='水使用量')),
                ('Cost_water', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='水費用')),
                ('Data_date_year', models.IntegerField(blank=True, default=2021, null=True, validators=[django.core.validators.MinValueValidator(2021)], verbose_name='年')),
                ('Data_date_month', models.IntegerField(blank=True, default=1, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='月')),
                ('Data_date_day', models.IntegerField(blank=True, default=1, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)], verbose_name='日')),
                ('Data_datetime', models.DateTimeField(blank=True, null=True, verbose_name='データ取得日')),
                ('Machine_history_input_date', models.DateField(verbose_name='登録日')),
                ('Machine_history_memo', models.TextField(blank=True, max_length=50, null=True, verbose_name='メモ')),
            ],
            options={
                'verbose_name_plural': '水コスト',
            },
        ),
        migrations.CreateModel(
            name='Customer_Infomation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Customer_name', models.CharField(max_length=20, verbose_name='企業名')),
                ('Customer_tel_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="半角数字 11桁で入力して下さい。 例:'09012345678'", regex='^[0-9]+$')], verbose_name='電話番号')),
                ('Customer_pastal_code', models.CharField(blank=True, max_length=7, null=True, validators=[django.core.validators.RegexValidator(message="半角数字 7桁で入力して下さい。 例:'1234567'", regex='^[0-9]+$')], verbose_name='郵便番号')),
                ('Customer_address1', models.CharField(blank=True, max_length=40, null=True, verbose_name='都道府県')),
                ('Customer_address2', models.CharField(blank=True, max_length=40, null=True, verbose_name='市町村番地')),
                ('Customer_address3', models.CharField(blank=True, max_length=40, null=True, verbose_name='建物名')),
                ('Customer_input_date', models.DateField(verbose_name='登録日')),
                ('Customer_memo', models.TextField(blank=True, max_length=50, null=True, verbose_name='メモ')),
            ],
            options={
                'verbose_name_plural': '客先情報',
            },
        ),
        migrations.CreateModel(
            name='Customer_Machine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Customer_machine_id', models.IntegerField(default=0, unique=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='装置ID')),
                ('Customer_machine_unit_no', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='号機')),
                ('Customer_machine_inst_date', models.DateField(blank=True, null=True, verbose_name='納入日')),
                ('Customer_machine_input_date', models.DateField(verbose_name='登録日')),
                ('Customer_machine_memo', models.TextField(blank=True, max_length=50, verbose_name='メモ')),
            ],
            options={
                'verbose_name_plural': '客先装置',
            },
        ),
        migrations.CreateModel(
            name='Customer_Machine_Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Customer_machine_id', models.IntegerField(blank=True, default=0, null=True, verbose_name='装置ID')),
                ('Machine_model', models.CharField(blank=True, max_length=20, null=True, verbose_name='型式')),
                ('Customer_machine_unit_no', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='号機')),
                ('Recipe_id', models.IntegerField(blank=True, default=1, null=True, verbose_name='品種ID')),
                ('Recipe_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='品種名')),
                ('Customer_recipe_no', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)], verbose_name='品種No')),
                ('Customer_recipe_time0', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='運転時間設定0')),
                ('Customer_recipe_time1', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='運転時間設定1')),
                ('Customer_recipe_time2', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='運転時間設定2')),
                ('Customer_recipe_time3', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='運転時間設定3')),
                ('Customer_recipe_time4', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='運転時間設定4')),
                ('Customer_recipe_temp0', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='温度設定0')),
                ('Customer_recipe_temp1', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='温度設定1')),
                ('Customer_recipe_temp2', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='温度設定2')),
                ('Customer_recipe_temp3', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='温度設定3')),
                ('Customer_recipe_temp4', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='温度設定4')),
                ('Customer_recipe_temp5', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='温度設定5')),
                ('Customer_recipe_temp6', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='温度設定6')),
                ('Customer_recipe_temp7', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='温度設定7')),
                ('Customer_recipe_temp8', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='温度設定8')),
                ('Customer_recipe_temp9', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='温度設定9')),
                ('Customer_recipe_temp10', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='温度設定10')),
                ('Customer_recipe_temp11', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='温度設定11')),
                ('Customer_recipe_setting_item_id0', models.IntegerField(blank=True, null=True, verbose_name='設定ID0')),
                ('Customer_recipe_setting_item_id1', models.IntegerField(blank=True, null=True, verbose_name='設定ID1')),
                ('Customer_recipe_setting_item_id2', models.IntegerField(blank=True, null=True, verbose_name='設定ID2')),
                ('Customer_recipe_setting_item_id3', models.IntegerField(blank=True, null=True, verbose_name='設定ID3')),
                ('Customer_recipe_setting_item_id4', models.IntegerField(blank=True, null=True, verbose_name='設定ID4')),
                ('Customer_recipe_setting_item_id5', models.IntegerField(blank=True, null=True, verbose_name='設定ID5')),
                ('Customer_recipe_setting_item_id6', models.IntegerField(blank=True, null=True, verbose_name='設定ID6')),
                ('Customer_recipe_setting_item_id7', models.IntegerField(blank=True, null=True, verbose_name='設定ID7')),
                ('Customer_recipe_setting_item_id8', models.IntegerField(blank=True, null=True, verbose_name='設定ID8')),
                ('Customer_recipe_setting_item_id9', models.IntegerField(blank=True, null=True, verbose_name='設定ID9')),
                ('Customer_recipe_setting_item_id10', models.IntegerField(blank=True, null=True, verbose_name='設定ID10')),
                ('Customer_recipe_setting_item_id11', models.IntegerField(blank=True, null=True, verbose_name='設定ID11')),
                ('Customer_recipe_setting_item_id12', models.IntegerField(blank=True, null=True, verbose_name='設定ID12')),
                ('Customer_recipe_setting_item_id13', models.IntegerField(blank=True, null=True, verbose_name='設定ID13')),
                ('Customer_recipe_setting_item_id14', models.IntegerField(blank=True, null=True, verbose_name='設定ID14')),
                ('Customer_recipe_setting_item_id15', models.IntegerField(blank=True, null=True, verbose_name='設定ID15')),
                ('Customer_recipe_setting_item_id16', models.IntegerField(blank=True, null=True, verbose_name='設定ID16')),
                ('Customer_recipe_setting_item_id17', models.IntegerField(blank=True, null=True, verbose_name='設定ID17')),
                ('Customer_recipe_setting_item_id18', models.IntegerField(blank=True, null=True, verbose_name='設定ID18')),
                ('Customer_recipe_setting_item_id19', models.IntegerField(blank=True, null=True, verbose_name='設定ID19')),
                ('Customer_recipe_conf0', models.CharField(blank=True, max_length=20, null=True, verbose_name='設定0')),
                ('Customer_recipe_conf1', models.CharField(blank=True, max_length=20, null=True, verbose_name='設定1')),
                ('Customer_recipe_conf2', models.CharField(blank=True, max_length=20, null=True, verbose_name='設定2')),
                ('Customer_recipe_conf3', models.CharField(blank=True, max_length=20, null=True, verbose_name='設定3')),
                ('Customer_recipe_conf4', models.CharField(blank=True, max_length=20, null=True, verbose_name='設定4')),
                ('Customer_recipe_conf5', models.CharField(blank=True, max_length=20, null=True, verbose_name='設定5')),
                ('Customer_recipe_conf6', models.CharField(blank=True, max_length=20, null=True, verbose_name='設定6')),
                ('Customer_recipe_conf7', models.CharField(blank=True, max_length=20, null=True, verbose_name='設定7')),
                ('Customer_recipe_conf8', models.CharField(blank=True, max_length=20, null=True, verbose_name='設定8')),
                ('Customer_recipe_conf9', models.CharField(blank=True, max_length=20, null=True, verbose_name='設定9')),
                ('Customer_recipe_conf10', models.CharField(blank=True, max_length=20, null=True, verbose_name='設定10')),
                ('Customer_recipe_conf11', models.CharField(blank=True, max_length=20, null=True, verbose_name='設定11')),
                ('Customer_recipe_conf12', models.CharField(blank=True, max_length=20, null=True, verbose_name='設定12')),
                ('Customer_recipe_conf13', models.CharField(blank=True, max_length=20, null=True, verbose_name='設定13')),
                ('Customer_recipe_conf14', models.CharField(blank=True, max_length=20, null=True, verbose_name='設定14')),
                ('Customer_recipe_conf15', models.CharField(blank=True, max_length=20, null=True, verbose_name='設定15')),
                ('Customer_recipe_conf16', models.CharField(blank=True, max_length=20, null=True, verbose_name='設定16')),
                ('Customer_recipe_conf17', models.CharField(blank=True, max_length=20, null=True, verbose_name='設定17')),
                ('Customer_recipe_conf18', models.CharField(blank=True, max_length=20, null=True, verbose_name='設定18')),
                ('Customer_recipe_conf19', models.CharField(blank=True, max_length=20, null=True, verbose_name='設定19')),
                ('Customer_recipe_set_value0', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='設定値0')),
                ('Customer_recipe_set_value1', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='設定値1')),
                ('Customer_recipe_set_value2', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='設定値2')),
                ('Customer_recipe_set_value3', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='設定値3')),
                ('Customer_recipe_set_value4', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='設定値4')),
                ('Customer_recipe_set_value5', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='設定値5')),
                ('Customer_recipe_set_value6', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='設定値6')),
                ('Customer_recipe_set_value7', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='設定値7')),
                ('Customer_recipe_set_value8', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='設定値8')),
                ('Customer_recipe_set_value9', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='設定値9')),
                ('Customer_recipe_set_value10', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='設定値10')),
                ('Customer_recipe_set_value11', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='設定値11')),
                ('Customer_recipe_set_value12', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='設定値12')),
                ('Customer_recipe_set_value13', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='設定値13')),
                ('Customer_recipe_set_value14', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='設定値14')),
                ('Customer_recipe_set_value15', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='設定値15')),
                ('Customer_recipe_set_value16', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='設定値16')),
                ('Customer_recipe_set_value17', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='設定値17')),
                ('Customer_recipe_set_value18', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='設定値18')),
                ('Customer_recipe_set_value19', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='設定値19')),
                ('Customer_machine_input_date', models.DateField(blank=True, null=True, verbose_name='登録日')),
                ('Customer_machine_memo', models.TextField(blank=True, max_length=50, null=True, verbose_name='メモ')),
                ('Signal_sys_to_plc', models.BooleanField(default=False)),
                ('Signal_plc_to_sys', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'レシピ情報',
            },
        ),
        migrations.CreateModel(
            name='Equipment_Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Equipment_category', models.CharField(max_length=10, unique=True, verbose_name='装置カテゴリー')),
                ('Equipment_category_input_date', models.DateField(verbose_name='登録日')),
            ],
            options={
                'verbose_name_plural': '装置カテゴリー',
            },
        ),
        migrations.CreateModel(
            name='Machine_Drive_History',
            fields=[
                ('His_id', models.AutoField(primary_key=True, serialize=False, verbose_name='履歴ID')),
                ('Customer_machine_id', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='装置ID')),
                ('Machine_model', models.CharField(blank=True, max_length=20, null=True, verbose_name='型式')),
                ('Customer_machine_unit_no', models.IntegerField(blank=True, default=1, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='号機')),
                ('Customer_recipe_no', models.IntegerField(blank=True, default=1, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='品種No')),
                ('Customer_recipe_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='品種名')),
                ('Machine_drive_time0', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='運転時間0')),
                ('Machine_drive_time1', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='運転時間1')),
                ('Machine_drive_time2', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='運転時間2')),
                ('Machine_drive_time3', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='運転時間3')),
                ('Machine_drive_time4', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='運転時間4')),
                ('Machine_drive_temp0', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='温度0')),
                ('Machine_drive_temp1', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='温度1')),
                ('Machine_drive_temp2', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='温度2')),
                ('Machine_drive_temp3', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='温度3')),
                ('Machine_drive_temp4', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='温度4')),
                ('Machine_drive_temp5', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='温度5')),
                ('Machine_drive_temp6', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='温度6')),
                ('Machine_drive_temp7', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='温度7')),
                ('Machine_drive_temp8', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='温度8')),
                ('Machine_drive_temp9', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='温度9')),
                ('Machine_drive_temp10', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='温度10')),
                ('Machine_drive_temp11', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='温度11')),
                ('Machine_drive_count', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='稼働回数')),
                ('Machine_electric_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='電力使用量')),
                ('Machine_steam_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='蒸気使用量')),
                ('Machine_gas_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='ガス使用量')),
                ('Machine_water_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='水使用量')),
                ('Machine_solvent0_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤0使用量')),
                ('Machine_solvent1_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤1使用量')),
                ('Machine_solvent2_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤2使用量')),
                ('Machine_solvent3_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤3使用量')),
                ('Machine_solvent4_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤4使用量')),
                ('Machine_solvent5_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤5使用量')),
                ('Machine_solvent6_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤6使用量')),
                ('Machine_solvent7_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤7使用量')),
                ('Machine_solvent8_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤8使用量')),
                ('Machine_solvent9_used', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤9使用量')),
                ('Unit_price_electric', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='電力単価')),
                ('Unit_price_steam', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='蒸気単価')),
                ('Unit_price_gas', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='ガス単価')),
                ('Unit_price_water', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='水単価')),
                ('Unit_price_solvent0', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤0単価')),
                ('Unit_price_solvent1', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤1単価')),
                ('Unit_price_solvent2', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤2単価')),
                ('Unit_price_solvent3', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤3単価')),
                ('Unit_price_solvent4', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤4単価')),
                ('Unit_price_solvent5', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤5単価')),
                ('Unit_price_solvent6', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤6単価')),
                ('Unit_price_solvent7', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤7単価')),
                ('Unit_price_solvent8', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤8単価')),
                ('Unit_price_solvent9', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤9単価')),
                ('Cost_electric', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='電力費用')),
                ('Cost_steam', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='蒸気費用')),
                ('Cost_gas', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='ガス費用')),
                ('Cost_water', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='水費用')),
                ('Cost_solvent0', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤費用0')),
                ('Cost_solvent1', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤費用1')),
                ('Cost_solvent2', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤費用2')),
                ('Cost_solvent3', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤費用3')),
                ('Cost_solvent4', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤費用4')),
                ('Cost_solvent5', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤費用5')),
                ('Cost_solvent6', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤費用6')),
                ('Cost_solvent7', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤費用7')),
                ('Cost_solvent8', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤費用8')),
                ('Cost_solvent9', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='溶剤費用9')),
                ('Cost_total_electric', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='合計費用（電力）')),
                ('Cost_total_steam', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='合計費用（蒸気）')),
                ('Cost_total_gas', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='合計費用（ガス）')),
                ('Cost_total_water', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='合計費用（水）')),
                ('Cost_total_solvent0', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='合計費用（溶剤0）')),
                ('Cost_total_solvent1', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='合計費用（溶剤1）')),
                ('Cost_total_solvent2', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='合計費用（溶剤2）')),
                ('Cost_total_solvent3', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='合計費用（溶剤3）')),
                ('Cost_total_solvent4', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='合計費用（溶剤4）')),
                ('Cost_total_solvent5', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='合計費用（溶剤5）')),
                ('Cost_total_solvent6', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='合計費用（溶剤6）')),
                ('Cost_total_solvent7', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='合計費用（溶剤7）')),
                ('Cost_total_solvent8', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='合計費用（溶剤8）')),
                ('Cost_total_solvent9', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='合計費用（溶剤9）')),
                ('Cost_total_all', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='合計費用')),
                ('Data_datetime', models.DateTimeField(blank=True, null=True, verbose_name='データ取得日')),
                ('Data_date', models.DateField(blank=True, null=True, verbose_name='データ取得日（年月日）')),
                ('Data_time', models.TimeField(blank=True, null=True, verbose_name='データ取得日（時分秒）')),
                ('Machine_history_input_date', models.DateField(blank=True, null=True, verbose_name='登録日')),
                ('Machine_history_memo', models.TextField(blank=True, max_length=50, null=True, verbose_name='メモ')),
                ('Signal_sys_to_plc', models.BooleanField(default=False)),
                ('Signal_plc_to_sys', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': '稼働履歴',
            },
        ),
        migrations.CreateModel(
            name='Machine_Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Machine_model', models.CharField(max_length=20, unique=True, verbose_name='型式')),
                ('Machine_model_input_date', models.DateField(verbose_name='登録日')),
                ('Machine_model_memo', models.TextField(blank=True, max_length=50, null=True, verbose_name='メモ')),
            ],
            options={
                'verbose_name_plural': '装置型式',
            },
        ),
        migrations.CreateModel(
            name='Mail_Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Mail_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='氏名')),
                ('Mail_department', models.CharField(blank=True, max_length=20, null=True, verbose_name='部署')),
                ('Mail_address', models.EmailField(max_length=240)),
                ('Mail_input_date', models.DateField(verbose_name='登録日')),
                ('Mail_memo', models.TextField(blank=True, max_length=50, null=True, verbose_name='メモ')),
            ],
            options={
                'verbose_name_plural': '通知メール登録',
            },
        ),
        migrations.CreateModel(
            name='Maintenance_Mail_Setting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Maintenance_threshold', models.IntegerField(blank=True, default=1, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='閾値')),
                ('Maintenance_send_setting', models.BooleanField(verbose_name='送信設定')),
                ('Maintenance_input_date', models.DateField(verbose_name='登録日')),
                ('Maintenance_memo', models.TextField(blank=True, max_length=50, null=True, verbose_name='メモ')),
            ],
            options={
                'verbose_name_plural': 'メンテナンスメール設定',
            },
        ),
        migrations.CreateModel(
            name='Recipe_Name',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Recipe_id', models.IntegerField(blank=True, default=1, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='品種ID')),
                ('Racipe_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='品種名')),
                ('Racipe_name_input_date', models.DateField(verbose_name='登録日')),
                ('Racipe_name_memo', models.TextField(blank=True, max_length=50, null=True, verbose_name='メモ')),
            ],
            options={
                'verbose_name_plural': 'レシピ情報',
            },
        ),
        migrations.CreateModel(
            name='Setting_Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Setting_item_id', models.IntegerField(blank=True, null=True, unique=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='品種名ID')),
                ('Setting_item_name', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='品種名')),
                ('Setting_item_input_date', models.DateField(verbose_name='登録日')),
                ('Setting_item_memo', models.TextField(blank=True, max_length=50, null=True, verbose_name='メモ')),
            ],
            options={
                'verbose_name_plural': '設定項目',
            },
        ),
        migrations.CreateModel(
            name='Solvent_Manufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Solvent_manu', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='メーカー')),
                ('Solvent_manu_input_date', models.DateField(verbose_name='登録日')),
            ],
            options={
                'verbose_name_plural': '溶剤メーカー',
            },
        ),
        migrations.CreateModel(
            name='Solvent_Name',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Solvent_name', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='溶剤名')),
                ('Solvent_name_input_date', models.DateField(verbose_name='登録日')),
            ],
            options={
                'verbose_name_plural': '溶剤名',
            },
        ),
        migrations.CreateModel(
            name='Trouble_Contents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Trouble_no', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='異常No')),
                ('Trouble_contents', models.CharField(blank=True, max_length=20, null=True, verbose_name='異常項目')),
                ('Trouble_input_date', models.DateField(verbose_name='登録日')),
                ('Trouble_memo', models.TextField(blank=True, max_length=50, null=True, verbose_name='メモ')),
                ('Machine_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.customer_machine', verbose_name='装置')),
            ],
            options={
                'verbose_name_plural': '異常内容',
            },
        ),
        migrations.CreateModel(
            name='Unit_Price_Electric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Unit_price_electric', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='単価')),
                ('Unit_price_electric_input_date', models.DateField(verbose_name='登録日')),
                ('Unit_price_electric_memo', models.TextField(blank=True, max_length=50, null=True, verbose_name='メモ')),
            ],
            options={
                'verbose_name_plural': '電力単価',
            },
        ),
        migrations.CreateModel(
            name='Unit_Price_Gas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Unit_price_gas', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='単価')),
                ('Unit_price_gas_input_date', models.DateField(verbose_name='登録日')),
                ('Unit_price_gas_memo', models.TextField(blank=True, max_length=50, null=True, verbose_name='メモ')),
            ],
            options={
                'verbose_name_plural': 'ガス単価',
            },
        ),
        migrations.CreateModel(
            name='Unit_Price_Steam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Unit_price_steam', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='単価')),
                ('Unit_price_steam_input_date', models.DateField(verbose_name='登録日')),
                ('Unit_price_steam_memo', models.TextField(blank=True, max_length=50, null=True, verbose_name='メモ')),
            ],
            options={
                'verbose_name_plural': '蒸気単価',
            },
        ),
        migrations.CreateModel(
            name='Unit_Price_Water',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Unit_price_water', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='単価')),
                ('Unit_price_water_input_date', models.DateField(verbose_name='登録日')),
                ('Unit_price_water_memo', models.TextField(blank=True, max_length=50, null=True, verbose_name='メモ')),
            ],
            options={
                'verbose_name_plural': '水単価',
            },
        ),
        migrations.CreateModel(
            name='Trouble_Mail_Setting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Trouble_mail_send_setting', models.BooleanField(verbose_name='送信設定')),
                ('Trouble_mail_input_date', models.DateField(verbose_name='登録日')),
                ('Trouble_mail_memo', models.TextField(blank=True, max_length=50, null=True, verbose_name='メモ')),
                ('Trouble_contents', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.trouble_contents', verbose_name='異常')),
                ('Trouble_mail_notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.mail_notification', verbose_name='メール設定')),
            ],
            options={
                'verbose_name_plural': '異常メール設定',
            },
        ),
        migrations.CreateModel(
            name='Trouble_History',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Trouble_occurrence_time', models.DateTimeField(blank=True, null=True, verbose_name='発生時刻')),
                ('Trouble_recovery_time', models.DateTimeField(blank=True, null=True, verbose_name='復帰時刻')),
                ('time_calc', models.IntegerField(blank=True, null=True, verbose_name='ロスタイム計算用')),
                ('Trouble_loss_time', models.CharField(blank=True, max_length=20, null=True, verbose_name='ロスタイム')),
                ('Signal_sys_to_plc', models.BooleanField(default=False)),
                ('Signal_plc_to_sys', models.BooleanField(default=False)),
                ('Customer_machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.customer_machine', verbose_name='装置')),
                ('Trouble_contents', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.trouble_contents', verbose_name='異常')),
            ],
            options={
                'verbose_name_plural': '異常履歴',
            },
        ),
        migrations.CreateModel(
            name='Solvent9_Conf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Unit_price_solvent9', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='単価')),
                ('Solvent9_input_date', models.DateField(verbose_name='登録日')),
                ('Solvent9_memo', models.TextField(blank=True, max_length=50, null=True, verbose_name='メモ')),
                ('Solvent9_manu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solvent9_manu', to='main_app.solvent_manufacturer', verbose_name='メーカー')),
                ('Solvent9_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solvent9_name', to='main_app.solvent_name', verbose_name='溶剤名')),
            ],
            options={
                'verbose_name_plural': '溶剤9設定',
            },
        ),
        migrations.CreateModel(
            name='Solvent8_Conf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Unit_price_solvent8', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='単価')),
                ('Solvent8_input_date', models.DateField(verbose_name='登録日')),
                ('Solvent8_memo', models.TextField(blank=True, max_length=50, null=True, verbose_name='メモ')),
                ('Solvent8_manu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solvent8_manu', to='main_app.solvent_manufacturer', verbose_name='メーカー')),
                ('Solvent8_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solvent8_name', to='main_app.solvent_name', verbose_name='溶剤名')),
            ],
            options={
                'verbose_name_plural': '溶剤8設定',
            },
        ),
        migrations.CreateModel(
            name='Solvent7_Conf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Unit_price_solvent7', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='単価')),
                ('Solvent7_input_date', models.DateField(verbose_name='登録日')),
                ('Solvent7_memo', models.TextField(blank=True, max_length=50, null=True, verbose_name='メモ')),
                ('Solvent7_manu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solvent7_manu', to='main_app.solvent_manufacturer', verbose_name='メーカー')),
                ('Solvent7_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solvent7_name', to='main_app.solvent_name', verbose_name='溶剤名')),
            ],
            options={
                'verbose_name_plural': '溶剤7設定',
            },
        ),
        migrations.CreateModel(
            name='Solvent6_Conf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Unit_price_solvent6', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='単価')),
                ('Solvent6_input_date', models.DateField(verbose_name='登録日')),
                ('Solvent6_memo', models.TextField(blank=True, max_length=50, null=True, verbose_name='メモ')),
                ('Solvent6_manu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solvent6_manu', to='main_app.solvent_manufacturer', verbose_name='メーカー')),
                ('Solvent6_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solvent6_name', to='main_app.solvent_name', verbose_name='溶剤名')),
            ],
            options={
                'verbose_name_plural': '溶剤6設定',
            },
        ),
        migrations.CreateModel(
            name='Solvent5_Conf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Unit_price_solvent5', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='単価')),
                ('Solvent5_input_date', models.DateField(verbose_name='登録日')),
                ('Solvent5_memo', models.TextField(blank=True, max_length=50, null=True, verbose_name='メモ')),
                ('Solvent5_manu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solvent5_manu', to='main_app.solvent_manufacturer', verbose_name='メーカー')),
                ('Solvent5_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solvent5_name', to='main_app.solvent_name', verbose_name='溶剤名')),
            ],
            options={
                'verbose_name_plural': '溶剤5設定',
            },
        ),
        migrations.CreateModel(
            name='Solvent4_Conf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Unit_price_solvent4', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='単価')),
                ('Solvent4_input_date', models.DateField(verbose_name='登録日')),
                ('Solvent4_memo', models.TextField(blank=True, max_length=50, null=True, verbose_name='メモ')),
                ('Solvent4_manu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solvent4_manu', to='main_app.solvent_manufacturer', verbose_name='メーカー')),
                ('Solvent4_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solvent4_name', to='main_app.solvent_name', verbose_name='溶剤名')),
            ],
            options={
                'verbose_name_plural': '溶剤4設定',
            },
        ),
        migrations.CreateModel(
            name='Solvent3_Conf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Unit_price_solvent3', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='単価')),
                ('Solvent3_input_date', models.DateField(verbose_name='登録日')),
                ('Solvent3_memo', models.TextField(blank=True, max_length=50, null=True, verbose_name='メモ')),
                ('Solvent3_manu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solvent3_manu', to='main_app.solvent_manufacturer', verbose_name='メーカー')),
                ('Solvent3_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solvent3_name', to='main_app.solvent_name', verbose_name='溶剤名')),
            ],
            options={
                'verbose_name_plural': '溶剤3設定',
            },
        ),
        migrations.CreateModel(
            name='Solvent2_Conf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Unit_price_solvent2', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='単価')),
                ('Solvent2_input_date', models.DateField(verbose_name='登録日')),
                ('Solvent2_memo', models.TextField(blank=True, max_length=50, null=True, verbose_name='メモ')),
                ('Solvent2_manu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solvent2_manu', to='main_app.solvent_manufacturer', verbose_name='メーカー')),
                ('Solvent2_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solvent2_name', to='main_app.solvent_name', verbose_name='溶剤名')),
            ],
            options={
                'verbose_name_plural': '溶剤2設定',
            },
        ),
        migrations.CreateModel(
            name='Solvent1_Conf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Unit_price_solvent1', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='単価')),
                ('Solvent1_input_date', models.DateField(verbose_name='登録日')),
                ('Solvent1_memo', models.TextField(blank=True, max_length=50, null=True, verbose_name='メモ')),
                ('Solvent1_manu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solvent1_manu', to='main_app.solvent_manufacturer', verbose_name='メーカー')),
                ('Solvent1_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solvent1_name', to='main_app.solvent_name', verbose_name='溶剤名')),
            ],
            options={
                'verbose_name_plural': '溶剤1設定',
            },
        ),
        migrations.CreateModel(
            name='Solvent0_Conf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Unit_price_solvent0', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='単価')),
                ('Solvent0_input_date', models.DateField(verbose_name='登録日')),
                ('Solvent0_memo', models.TextField(blank=True, max_length=50, null=True, verbose_name='メモ')),
                ('Solvent0_manu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solvent0_manu', to='main_app.solvent_manufacturer', verbose_name='メーカー')),
                ('Solvent0_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solvent0_name', to='main_app.solvent_name', verbose_name='溶剤名')),
            ],
            options={
                'verbose_name_plural': '溶剤0設定',
            },
        ),
        migrations.AddConstraint(
            model_name='recipe_name',
            constraint=models.UniqueConstraint(fields=('Recipe_id', 'Racipe_name'), name='unique_recipe_name'),
        ),
        migrations.AddField(
            model_name='maintenance_mail_setting',
            name='Maintenance_machine_history',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.machine_drive_history', verbose_name='稼働履歴'),
        ),
        migrations.AddField(
            model_name='maintenance_mail_setting',
            name='Maintenance_mail_notification',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.mail_notification', verbose_name='メール設定'),
        ),
        migrations.AddField(
            model_name='machine_model',
            name='Machine_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.equipment_category', verbose_name='装置カテゴリー'),
        ),
        migrations.AddField(
            model_name='customer_machine',
            name='Machine_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.machine_model', verbose_name='装置'),
        ),
        migrations.AddField(
            model_name='cost_water',
            name='Machine_drive_history',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.machine_drive_history', verbose_name='稼働履歴'),
        ),
        migrations.AddField(
            model_name='cost_water',
            name='Unit_price_water',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.unit_price_water', verbose_name='単価'),
        ),
        migrations.AddField(
            model_name='cost_total',
            name='Machine_drive_history',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.machine_drive_history', verbose_name='稼働履歴'),
        ),
        migrations.AddField(
            model_name='cost_steam',
            name='Machine_drive_history',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.machine_drive_history', verbose_name='稼働履歴'),
        ),
        migrations.AddField(
            model_name='cost_steam',
            name='Unit_price_steam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.unit_price_steam', verbose_name='単価'),
        ),
        migrations.AddField(
            model_name='cost_solvent',
            name='Machine_drive_history',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.machine_drive_history', verbose_name='稼働履歴'),
        ),
        migrations.AddField(
            model_name='cost_solvent',
            name='Solvent0_conf',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.solvent0_conf', verbose_name='単価'),
        ),
        migrations.AddField(
            model_name='cost_gas',
            name='Machine_drive_history',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.machine_drive_history', verbose_name='稼働履歴'),
        ),
        migrations.AddField(
            model_name='cost_gas',
            name='Unit_price_gas',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.unit_price_gas', verbose_name='単価'),
        ),
        migrations.AddField(
            model_name='cost_electric',
            name='Machine_drive_history',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cost_history_electric', to='main_app.machine_drive_history', verbose_name='稼働履歴'),
        ),
        migrations.AddConstraint(
            model_name='trouble_contents',
            constraint=models.UniqueConstraint(fields=('Machine_model', 'Trouble_no'), name='unique_trouble_no'),
        ),
    ]
